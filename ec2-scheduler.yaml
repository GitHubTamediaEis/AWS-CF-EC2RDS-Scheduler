AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: 'Updated EC2/RDS Scheduler: This template installs an updated version
  of AWS EC2 Scheduler for automatically starting and stopping EC2/RDS instances.'
Parameters:
  Schedule:
    Description: Schedule for CWE Scheduled Expression
    Type: String
    Default: 5minutes
    AllowedValues:
    - 1minute
    - 5minutes
    - 15minutes
    - 30minutes
    - 1hour
  DefaultStartTime:
    Description: Default Start Time (DefaultTimeZone, utc by default,24-hour format)
    Type: String
    Default: '0800'
  DefaultStopTime:
    Description: Default Start Time (DefaultTimeZone, utc by default, 24-hour format)
    Type: String
    Default: '1800'
  DefaultDaysActive:
    Description: Enter 'all', 'weekdays', or any combination of days ('mon', 'tue',
      'wed', 'thu', 'fri', 'sat', or 'sun') comma separated
    Type: String
    Default: "'mon','tue','wed','thu','fri'"
  DefaultTimeZone:
    Description: Enter 'utc', 'Australia/Sydney','Etc/GMT+10', or any timezone supported
      by pytz
    Type: String
    Default: Europe/Zurich
  CustomTagName:
    Description: Custom Tag Name
    Type: String
    Default: scheduler:ec2-startstop
  CustomRDSTagName:
    Description: Custom Tag Name
    Type: String
    Default: scheduler:rds-startstop
  CloudWatchMetrics:
    Description: Create CloudWatch Custom Metric
    Type: String
    Default: Disabled
    AllowedValues:
    - Enabled
    - Disabled
  Regions:
    Description: AWS regions to query, all means all AWS regions, or separate  multiple
      regions by space
    Type: String
    Default: eu-west-1
  RDSSupport:
    Description: Support RDS instances
    Type: String
    Default: 'Yes'
    AllowedValues:
    - 'Yes'
    - 'No'
  S3BucketName:
    Description: S3 bucket name in which  lambda zip code is
    Type: "String"
    Default: 'ec2-rds-scheduler'
Mappings:
  Schedule:
    Time:
      1minute: cron(0/1 * * * ? *)
      5minutes: cron(0/5 * * * ? *)
      15minutes: cron(0/15 * * * ? *)
      30minutes: cron(0/30 * * * ? *)
      1hour: cron(0 * * * ? *)
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Tag Configuration
      Parameters:
      - CustomTagName
    - Label:
        default: CloudWatch Event Schedule Configuration
      Parameters:
      - Schedule
    - Label:
        default: Default Value Configuration
      Parameters:
      - DefaultStartTime
      - DefaultStopTime
      - DefaultDaysActive
      - DefaultTimeZone
    - Label:
        default: CloudWatch Custom Metric
      Parameters:
      - CloudWatchMetrics
Resources:
  Ec2Scheduler:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: ec2-scheduler.lambda_handler
      Timeout: 300
      MemorySize: 256
      Runtime:  python2.7
      CodeUri: './ec2-scheduler.zip'
      Description: EC2 Scheduler Lambda function (supporting weekdays/monthdays) for automatically starting and stopping EC2 instances.
      Policies:
      - PolicyName: ec2SchedulerPermissions
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:log-group:/aws/lambda/*
          - Effect: Allow
            Action:
            - ec2:StartInstances
            - ec2:StopInstances
            - ec2:DescribeRegions
            - ec2:DescribeInstances
            - rds:DescribeDBInstances
            - rds:StartDBInstance
            - rds:StopDBInstance
            - rds:ListTagsForResource
            - cloudwatch:PutMetricData
            - cloudformation:DescribeStacks
            - kms:CreateGrant
            Resource: "*"
      Events:
        LambdaSchedule:
        - Type: Schedule
          Properties:
            Schedule: !Ref Schedule
            Input: !Sub | 
              {
              "Regions":"${Regions}",
              "CustomTagName":"${CustomTagName}",
              "CustomRDSTagName":"${CustomRDSTagName}",
              "DefaultStartTime":"${DefaultStartTime}",
              "DefaultStopTime":"${DefaultStopTime}",
              "DefaultTimeZone":"${DefaultTimeZone}",
              "CloudWatchMetrics":"${CloudWatchMetrics}",
              "DefaultDaysActive":"${DefaultDaysActive}",
              "RDSSupport":"${RDSSupport}"
              }